name: Finma Frontend

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'  # Use the version compatible with your React app

      - name: Zip code
        run: tar -czvf react-app.tar.gz . -x "*.git*" "*.github*" "*.DS_Store" "*.env" "node_modules/*" "build/*" # Compress code for CodeDeploy
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Replace with your AWS region

      # - name: Deploy to AWS CodeDeploy
      #   uses: aws-actions/aws-codedeploy-deploy@v1
      #   with:
      #     application-name: ${{ secrets.CODEDEPLOY_APPLICATION_NAME }}  # Replace with your CodeDeploy application name
      #     deployment-group: ${{ secrets.CODEDEPLOY_DEPLOYMENT_GROUP }}  # Replace with your CodeDeploy deployment group
      #     bundle-type: zip
      #     file-path: "."  # Path to the root of the repository
      #     wait-for-deployment: true  # Wait until the deployment finishes before marking the job as done


      - name: Deploy to CodeDeploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws deploy create-deployment \
            --application-name ${{ secrets.CODEDEPLOY_APPLICATION_NAME }} \
            --deployment-group-name ${{ secrets.CODEDEPLOY_DEPLOYMENT_GROUP }} \
            --s3-location bucket=${{ secrets.S3_BUCKET_NAME }},key=react-app.tar.gz,bundleType=tgz
